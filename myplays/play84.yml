---
- name: Demonstrate a play where as a task is forced to change status
  hosts: localhost
  become: true
  remote_user: ansible
  tasks: 
   - name: Task1 to print a message
     debug: 
      msg: This is message
     changed_when: true
     notify: handleme
   - name: Demonstrate flush handler
     meta: flush_handlers
  #Meta tasks are a special kind of task which can includence Ansible internal excution or state
  #Meta task can be used anywhere within your playbook.
  #flush_handlers make Ansible run any handler tasks which have thus far been notified
  #Ansible insert these tasks internally at certain points to implicitly trigger handlers run.     
  #Handler is processed with notify statement when change occurs in the tasks
  #If no change occurs, handler will be ignored ie handler will not be notified
   - name: Task2 to print a message
     debug: 
      msg: This is message
     changed_when: true
     notify: handleme 
  #This is second time you are notifying the same handler.
  #However, through you notify handler manytimes, it runs only once.
  #Handler are invoked at the end of all tasks processed
  #They are processed in the same order they appear in the handlers section and
  #not in the order they are notified    
  handler:
   - name: handleme1
     debug:
      msg: In handler named handleme1
   - name: handleme2
     debug:
      msg: In handler named handleme2   
...